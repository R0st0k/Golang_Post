openapi: 3.0.2
servers:
  - url: http://localhost:8080/api/v1
    description: Production server
info:
  contact:
    email: 2002rostok@gmail.com
    name: R0st0k
  description: Information System "Post" API
  termsOfService: http://swagger.io/terms/
  title: Information System "Post"
  version: 0.3.2
tags:
  - name: Get Information
    description: Endpoints to get information
  - name: Update Information
    description: Endpoints to update information
paths:
  /sending:
    get:
      summary: Get information about a single sending
      description: >
        Get information about a sending by `order_id`.
        Require a complete match of `order_id`.
        Return `type`, `status` and `stages`.
      tags:
        - Get Information
      parameters:
        - $ref: '#/components/parameters/SendingOrderID'
      responses:
        '200':
          $ref: '#/components/responses/SendingGetResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
    post:
      summary: Registration of a new sending
      description: >
        Registration of a new sending.
        Require `type`, `sender`, `receiver`, `size`, `weight`.
        Return `order_id` of new sending.
      tags:
        - Update Information
      requestBody:
        $ref: '#/components/requestBodies/Sending'
      responses:
        '200':
          $ref: '#/components/responses/SendingPostResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
  /postcodes_by_settlement:
    get:
      summary: Get information about postcodes in cities
      description: >
        Get information about postcodes in cities.
        Return map with `settlement` key and `postcode` array value.
      tags:
        - Get Information
      responses:
        '200':
          $ref: '#/components/responses/PostcodesBySettlementGetResponse'
  /sending_filter:
    get:
      summary: Get sendings that fit the filter
      description: >
        Get sendings that fit the filter.
        Require `page` and `elems_on_page`.
        Return amount of sendings that fit the filter and sendings on the selected page.
      tags:
        - Get Information
      parameters:
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/ElementsOnPage'
        - $ref: '#/components/parameters/SendingFilter'
        - $ref: '#/components/parameters/SendingSort'
      responses:
        '200':
          $ref: '#/components/responses/SendingFilterGetResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
components:
  schemas:
    Error:
      type: object
      required:
        - error_message
      properties:
        error_message:
          type: string
          example: You don't look at errors anyway
    SendingOrderID:
      type: string
      format: uuid
      example: 123e4567-e89b-12d3-a456-426655440000
    SendingType:
      type: string
      enum: [ Письмо, Посылка, Бандероль ]
      example: Письмо
    SendingStatus:
      type: string
      enum: [ В пути, Доставлено, Утеряно ]
      example: В пути
    SendingSize:
      type: object
      required:
        - length
        - width
        - height
      properties:
        length:
          type: integer
          format: int64
          minimum: 10
          example: 100
        width:
          type: integer
          format: int64
          minimum: 10
          example: 73
        height:
          type: integer
          format: int64
          minimum: 10
          example: 42
    SendingWeight:
      type: integer
      format: int64
      minimum: 10
      example: 1000
    SendingStage:
      type: object
      required:
        - name
        - date
        - postcode
        - settlement
      properties:
        name:
          type: string
          enum:
            - Принято в отделении связи
            - Покинуло место приема
            - Прибыло в сортировочный центр
            - Покинуло сортировочный центр
            - Прибыло в место вручения
            - Вручено адресату
          example: Принято в отделении связи
        date:
          type: string
          format: date-time
        postcode:
          $ref: '#/components/schemas/AddressPostcode'
        settlement:
          type: string
          example: Санкт-Петербург
    Address:
      type: object
      required:
        - postcode
        - settlement
        - street
        - building
      properties:
        postcode:
          $ref: '#/components/schemas/AddressPostcode'
        region:
          type: string
          example: Республика Башкортостан
        district:
          type: string
          example: Мелеузовский район
        settlement:
          type: string
          example: пос. Нугуш
        street:
          type: string
          example: ул. Ленина
        building:
          type: string
          example: 42
        apartment:
          type: string
          example: 1
    AddressPostcode:
      type: string
      pattern: '^\d{6}$'
      example: 212017
    PostClient:
      type: object
      required:
        - name
        - surname
        - address
      properties:
        name:
          type: string
          example: Налсур
        surname:
          type: string
          example: Мулюков
        middle_name:
          type: string
          example: Рустэмович
        address:
          $ref: '#/components/schemas/Address'
    Page:
      type: integer
      format: int64
      minimum: 1
      example: 1
    ElementsOnPage:
      type: integer
      format: int64
      minimum: 1
      example: 5
    SendingFilter:
      type: object
      properties:
        order_id:
          description: UUID or a part of it
          type: string
          minLength: 1
          maxLength: 36
          example: 123e4567-e89b-12d3-a456-426655440000
        type:
          description: Type of sending
          $ref: '#/components/schemas/SendingType'
        status:
          description: Status of sending
          $ref: '#/components/schemas/SendingStatus'
        date_start:
          description: Start of sending date range
          type: string
          format: date
          example: 2022-11-20
        date_finish:
          description: Finish of sending date range
          type: string
          format: date
          example: 2022-11-23
        sender_settlement:
          description: Sender's settlement or a part of it
          type: string
          minLength: 1
          example: Москва
        receiver_settlement:
          description: Receiver's settlement or a part of it
          type: string
          minLength: 1
          example: Санкт-Петербург
        length:
          type: integer
          format: int64
          minimum: 10
          example: 100
        width:
          type: integer
          format: int64
          minimum: 10
          example: 73
        height:
          type: integer
          format: int64
          minimum: 10
          example: 42
        weight:
          description: Weight of sending
          $ref: '#/components/schemas/SendingWeight'
    SendingSort:
      type: object
      properties:
        sort_type:
          type: string
          enum: [ asc, desc ]
          example: asc
        sort_field:
          type: string
          enum: [ order_id, type, status, date, sender_settlement, receiver_settlement, weight ]
          example: order_id
  parameters:
    SendingOrderID:
      in: query
      name: order_id
      description: ID of sending
      required: true
      schema:
        $ref: '#/components/schemas/SendingOrderID'
    Page:
      in: query
      name: page
      description: Current page
      required: true
      schema:
        $ref: '#/components/schemas/Page'
    ElementsOnPage:
      in: query
      name: elems_on_page
      description: The number of items displayed on the page
      required: true
      schema:
        $ref: '#/components/schemas/ElementsOnPage'
    SendingFilter:
      in: query
      name: filter
      description: Sending filter
      required: true
      schema:
        $ref: '#/components/schemas/SendingFilter'
    SendingSort:
      in: query
      name: sort
      description: Sending sort
      required: true
      schema:
        $ref: '#/components/schemas/SendingSort'
  requestBodies:
    Sending:
      description: Information of sending
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - type
              - sender
              - receiver
              - size
              - weight
            properties:
              type:
                $ref: '#/components/schemas/SendingType'
              sender:
                $ref: '#/components/schemas/PostClient'
              receiver:
                $ref: '#/components/schemas/PostClient'
              size:
                $ref: '#/components/schemas/SendingSize'
              weight:
                $ref: '#/components/schemas/SendingWeight'
  responses:
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    NotFound:
      description: Resource Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    SendingGetResponse:
      description: ok
      content:
        application/json:
          schema:
            type: object
            required:
              - type
              - status
              - stages
            properties:
              type:
                $ref: '#/components/schemas/SendingType'
              status:
                $ref: '#/components/schemas/SendingStatus'
              stages:
                type: array
                items:
                  $ref: '#/components/schemas/SendingStage'
    PostcodesBySettlementGetResponse:
      description: ok
      content:
        application/json:
          schema:
            type: object
            additionalProperties:
              type: array
              items:
                $ref: '#/components/schemas/AddressPostcode'
            example:
              Санкт-Петербург: [ 123001, 123002 ]
              Москва: [ 124001 ]
    SendingPostResponse:
      description: ok
      content:
        application/json:
          schema:
            type: object
            required:
              - order_id
            properties:
              order_id:
                $ref: '#/components/schemas/SendingOrderID'
    SendingFilterGetResponse:
      description: ok
      content:
        application/json:
          schema:
            type: object
            required:
              - total
              - result
            properties:
              total:
                type: integer
                format: int64
                minimum: 0
                example: 1
              result:
                type: array
                items:
                  type: object
                  required:
                    - order_id
                    - type
                    - date
                    - settlement
                    - weight
                    - size
                    - status
                  properties:
                    order_id:
                      $ref: '#/components/schemas/SendingOrderID'
                    type:
                      $ref: '#/components/schemas/SendingType'
                    date:
                      type: string
                      format: date
                      example: 2022-11-23
                    settlement:
                      type: object
                      required:
                        - sender
                        - receiver
                      properties:
                        sender:
                          type: string
                          example: Москва
                        receiver:
                          type: string
                          example: Санкт-петербург
                    weight:
                      $ref: '#/components/schemas/SendingWeight'
                    size:
                      $ref: '#/components/schemas/SendingSize'
                    status:
                      $ref: '#/components/schemas/SendingStatus'